import"./style-b02JLB5g.js";"serviceWorker"in navigator&&navigator.serviceWorker.getRegistrations().then(function(t){if(t.length>0){console.log("Found old service workers, unregistering...");for(let o of t)o.unregister();window.location.reload(!0)}});const m={gasApi:{run(t,o={}){const s="https://script.google.com/macros/s/AKfycbwaCruHVMi3XW1uqM8BesmRO2Pgvb2wMiBmFEY594K6MNzNTar7K_LXCQaHcVvFyFzYdg/exec";return console.log(`%c[API Request] -> ${t}`,"color: #0052cc; font-weight: bold;",o),new Promise((a,n)=>{const e=`jsonp_callback_${Date.now()}_${Math.floor(Math.random()*1e5)}`,r=document.createElement("script");let i=`${s}?action=${t}&callback=${e}`;Object.keys(o).forEach(l=>{let d=o[l];typeof d=="object"&&(d=JSON.stringify(d)),i+=`&${encodeURIComponent(l)}=${encodeURIComponent(d)}`}),r.src=i;const c=setTimeout(()=>{n(new Error(`Request timed out for action: ${t}`)),h()},2e4);window[e]=l=>{l.success?console.log(`%c[API Response] <- ${t}`,"color: #00875a; font-weight: bold;",l):console.error(`%c[API Error] <- ${t}`,"color: #de350b; font-weight: bold;",l),a(l),h()};const h=()=>{clearTimeout(c),delete window[e],r.parentNode&&r.parentNode.removeChild(r)};r.onerror=()=>{n(new Error(`Script error for action: ${t}`)),h()},document.head.appendChild(r)})}},state:{currentFrameNumber:null,qrScanner:null,isEditMode:!1,formCache:{},vehicleProgressCache:{}},dom:{},config:{},maintenanceData:{},cacheDomElements(){this.dom={loader:document.getElementById("loader"),notification:document.getElementById("notification"),mainContent:document.getElementById("main-content"),homeScreen:document.getElementById("home-screen"),workflowContainer:document.getElementById("workflow-container"),userNameInput:document.getElementById("user-name-input"),frameNumberInput:document.getElementById("frame-number-input"),tabsContainer:document.getElementById("tabs-container"),inFactoryContent:document.getElementById("in-factory-content"),outFactoryContent:document.getElementById("out-factory-content"),startBtn:document.getElementById("start-btn"),scanBtn:document.getElementById("scan-btn")}},init(){this.cacheDomElements(),this.bindEvents(),this.showLoader("正在初始化應用..."),this.gasApi.run("getInitialPayload").then(t=>{if(t.success){const o=t.data;this.config=o.config,this.maintenanceData=o.maintenanceData,this.preloadForms(),this.setupEventListeners(),this.renderTabs(),this.loadPersistedData(),this.setActiveTab("in-factory")}else this.handleError(t.message)}).catch(this.handleError.bind(this)).finally(()=>this.hideLoader())},bindEvents(){this.startProcess=this.startProcess.bind(this),this.toggleScanner=this.toggleScanner.bind(this),this.handleFormSubmit=this.handleFormSubmit.bind(this),this.goHome=this.goHome.bind(this),this.showForm=this.showForm.bind(this),this.showDirectForm=this.showDirectForm.bind(this)},async preloadForms(){const t=[...this.config.IN_FACTORY_FORMS,...this.config.OUT_FACTORY_FORMS];for(const o of t)try{const s=await fetch(`${o}.html?t=${new Date().getTime()}`);if(!s.ok)throw new Error(`Form ${o} not found at ${o}.html`);this.state.formCache[o]=await s.text()}catch(s){console.error(`Failed to preload form ${o}:`,s)}},fetchFormStructure(t){return new Promise((o,s)=>{this.state.formCache[t]?o(this.state.formCache[t]):(console.warn(`Form ${t} was not preloaded, fetching now.`),fetch(`${t}.html?t=${new Date().getTime()}`).then(a=>{if(!a.ok)throw new Error(`Form ${t} not found.`);return a.text()}).then(a=>{this.state.formCache[t]=a,o(a)}).catch(a=>{this.handleError(`無法載入表單 ${t}。`),s(a)}))})},setupEventListeners(){this.dom.startBtn.addEventListener("click",this.startProcess),this.dom.scanBtn.addEventListener("click",this.toggleScanner),this.dom.frameNumberInput.addEventListener("keypress",t=>{t.key==="Enter"&&this.startProcess()}),this.dom.tabsContainer.addEventListener("click",t=>{t.target.classList.contains("tab")&&this.setActiveTab(t.target.dataset.tab)})},renderTabs(){this.dom.inFactoryContent.style.display="block",this.dom.outFactoryContent.style.display="none"},setActiveTab(t){this.dom.tabsContainer.querySelectorAll(".tab").forEach(s=>s.classList.remove("active")),this.dom.tabsContainer.querySelector(`[data-tab="${t}"]`).classList.add("active"),t==="in-factory"?(this.dom.inFactoryContent.style.display="block",this.dom.outFactoryContent.style.display="none"):(this.dom.inFactoryContent.style.display="none",this.dom.outFactoryContent.style.display="block",this.renderOutFactoryForms())},renderOutFactoryForms(){if(!this.config.OUT_FACTORY_FORMS||this.config.OUT_FACTORY_FORMS.length===0){this.dom.outFactoryContent.innerHTML="<p>目前沒有廠外流程。</p>";return}let t='<div class="out-factory-grid">';this.config.OUT_FACTORY_FORMS.forEach(o=>{const s=this.maintenanceData[o]||o;t+=`<button class="btn-secondary" data-form-id="${o}">${s}</button>`}),t+="</div>",this.dom.outFactoryContent.innerHTML=t,this.dom.outFactoryContent.querySelectorAll(".btn-secondary").forEach(o=>{o.addEventListener("click",s=>{const a=s.currentTarget.dataset.formId;this.showDirectForm(a)})})},loadPersistedData(){const t=localStorage.getItem("userName");t&&(this.dom.userNameInput.value=t)},startProcess(){const t=this.dom.frameNumberInput.value.trim().toUpperCase().replace(/[^A-Z0-9]/g,""),o=this.dom.userNameInput.value.trim();if(!o)return this.showNotification("請輸入作業人員","error");if(!t)return this.showNotification("請輸入有效車架號碼","error");localStorage.setItem("userName",o),this.dom.frameNumberInput.value=t,this.state.currentFrameNumber=t,this.fetchAndShowProgressDashboard(t)},fetchAndShowProgressDashboard(t,o=!1){if(!o&&this.state.vehicleProgressCache[t]){this.renderProgressDashboard(this.state.vehicleProgressCache[t]),this.showScreen("workflow-container");return}this.showLoader("正在查詢車輛進度..."),this.gasApi.run("getVehicleProgress",{frameNumber:t}).then(s=>{s.success?(this.state.vehicleProgressCache[t]=s.data,this.renderProgressDashboard(s.data),this.showScreen("workflow-container")):this.handleError(s.message)}).catch(this.handleError.bind(this)).finally(()=>this.hideLoader())},renderProgressDashboard(t){const o=t.progress||{},s=Object.keys(o).filter(e=>o[e]===!0).map(e=>String(e).trim().toUpperCase());let a=null;for(const e of this.config.IN_FACTORY_FORMS){const r=String(e).trim().toUpperCase();if(!s.includes(r)){a=r;break}}let n='<div class="progress-stepper">';this.config.IN_FACTORY_FORMS.forEach(e=>{const r=this.maintenanceData[e]||e,i=String(e).trim().toUpperCase(),c=s.includes(i),h=a===i;let l="step";c&&(l+=" completed"),h&&(l+=" current"),n+=`
        <div class="${l}" id="step-${e}">
          <div class="step-content">
            <h3>${r} <span class="status-indicator">${c?"✓ 已完成":h?"» 進行中":"待辦"}</span></h3>
            <p>狀態: ${c?"已完成":"未完成"}</p>
            <button class="btn-primary" data-form-id="${e}" data-is-completed="${c}">
              ${c?"查看/編輯":"開始作業"}
            </button>
          </div>
        </div>`}),n+="</div>",this.dom.workflowContainer.innerHTML=`
      <div class="content-card active">
        <div class="workflow-header">
          <h2>車輛進度儀表板</h2>
          <p>車架號碼: <strong>${this.state.currentFrameNumber}</strong> | 作業人員: <strong>${this.dom.userNameInput.value.trim()}</strong></p>
        </div>
        ${n}
        <div class="workflow-actions">
          <button class="btn-secondary" id="back-to-home">返回主畫面</button>
        </div>
      </div>`,this.dom.workflowContainer.querySelector("#back-to-home").addEventListener("click",this.goHome),this.dom.workflowContainer.querySelectorAll(".btn-primary").forEach(e=>{e.addEventListener("click",r=>{const i=r.currentTarget.dataset.formId,c=r.currentTarget.dataset.isCompleted==="true";this.showForm(i,this.state.currentFrameNumber,c)})})},goHome(){this.showScreen("home-screen"),this.setActiveTab("in-factory")},showForm(t,o,s=!1){this.state.isEditMode=s;const n={title:this.maintenanceData[t]||t,subtitle:`車架號碼: ${o}`,backButtonText:"返回進度儀表板",backButtonAction:()=>this.fetchAndShowProgressDashboard(o)};this.showFormBase(t,s,n)},showDirectForm(t){this.state.isEditMode=!1;const s={title:this.maintenanceData[t]||t,subtitle:"請填寫以下欄位",backButtonText:"返回主畫面",backButtonAction:()=>this.goHome()};this.showFormBase(t,!1,s)},populateDynamicFields(t,o,s){const a=this.dom.workflowContainer.querySelector(".form-container");let n=a.innerHTML;const e=new Date().toLocaleString("sv-SE");n=n.replace(/{{車架號碼}}/g,s||""),n=n.replace(new RegExp(`{{${o}_更新時間}}`,"g"),e),a.innerHTML=n},async showFormBase(t,o,s){try{this.showLoader("正在載入表單...");const a=await this.fetchFormStructure(t);if(!a)throw new Error(`無法載入表單 ${t} 的 HTML。`);this.dom.workflowContainer.innerHTML=`
              <div class="content-card active">
                <div class="workflow-header">
                  <h2>${s.title}</h2>
                  <p>${s.subtitle} | 作業人員: <strong>${this.dom.userNameInput.value.trim()}</strong></p>
                </div>
                <div class="form-container">${a}</div>
              </div>`,this.populateDynamicFields(null,t,this.state.currentFrameNumber);const n=this.dom.workflowContainer.querySelector("form");if(!n)throw new Error("在載入的 HTML 中找不到 <form> 元素。");n.id=t;const e=this.state.currentFrameNumber;if(e){const h=n.querySelector('input[name="車架號碼"]');h&&(h.value=e)}const r="Your Vehicle Model",i=n.querySelector('input[name="車輛型號"]');i&&(i.value=r);const c=document.createElement("div");c.className="workflow-actions",c.innerHTML=`
              <button type="submit" class="btn-primary">提交表單</button>
              <button type="button" class="btn-secondary" id="back-button">${s.backButtonText}</button>
            `,n.appendChild(c),n.addEventListener("submit",this.handleFormSubmit),n.querySelector("#back-button").addEventListener("click",s.backButtonAction),o&&await this.loadAndPopulateFormData(n,n.id,this.state.currentFrameNumber),this.showScreen("workflow-container")}catch(a){this.handleError(a)}finally{this.hideLoader()}},loadAndPopulateFormData(t,o,s){return new Promise((a,n)=>{this.gasApi.run("getFormResponseData",{formId:o,frameNumber:s}).then(e=>{if(e.success&&e.data&&Object.keys(e.data).length>0){const r=e.data;for(const i in r){const c=t.querySelector(`[name="${i}"]`);if(c)switch(c.type){case"radio":{const h=t.querySelector(`[name="${i}"][value="${r[i]}"]`);h&&(h.checked=!0);break}case"checkbox":c.checked=r[i]===!0||r[i]==="true";break;case"file":{if(typeof r[i]=="string"&&r[i].startsWith("http")){const h=document.getElementById(`${t.id}_${i}_preview`);h&&(h.src=r[i],h.style.display="block")}break}default:c.value=r[i];break}}a()}else e.success?(this.showNotification("查無先前的表單紀錄。","success"),a()):(this.showNotification(`無法載入資料: ${e.message}`,"error"),n(new Error(e.message)))}).catch(e=>{this.handleError(e),n(e)})})},async handleFormSubmit(t){t.preventDefault();const o=t.target;this.showLoader("正在提交資料..."),console.log("--- Debugging Form Elements ---"),console.log("Form object:",o);for(const e of o.elements)console.log(`Found element: Name='${e.name}', Type='${e.type}', Value='${e.value}', Checked='${e.checked}'`);console.log("-----------------------------");const s={};for(const e of o.elements)if(e.name)switch(e.type){case"radio":case"checkbox":e.checked&&(s[e.name]=e.value);break;case"file":break;default:s[e.name]=e.value;break}s.formId=o.id,s.車架號碼=this.state.currentFrameNumber,s.userName=this.dom.userNameInput.value.trim();const a=o.querySelectorAll('input[type="file"]'),n=Array.from(a).map(e=>e.files&&e.files[0]?this.resizeImage(e.files[0],1024,.8).then(r=>{s[e.name]=r}):Promise.resolve());try{await Promise.all(n),this.submitDataToServer(s)}catch(e){this.handleError("處理圖片時發生錯誤: "+e.message),this.hideLoader()}},submitDataToServer(t){this.showLoader("正在儲存資料..."),this.gasApi.run("processFormSubmit",{formData:JSON.stringify(t)}).then(async o=>{if(o.success)if(this.showNotification("資料提交成功！","success"),delete this.state.vehicleProgressCache[this.state.currentFrameNumber],this.config.IN_FACTORY_FORMS.includes(t.formId)){const s=await this.gasApi.run("getVehicleProgress",{frameNumber:this.state.currentFrameNumber});if(s.success){this.state.vehicleProgressCache[this.state.currentFrameNumber]=s.data;const a=s.data.progress||{},n=Object.keys(a).filter(r=>a[r]===!0).map(r=>String(r).trim().toUpperCase());let e=null;for(const r of this.config.IN_FACTORY_FORMS)if(!n.includes(String(r).trim().toUpperCase())){e=r;break}e?(this.showNotification(`自動載入下一個表單: ${this.maintenanceData[e]||e}`,"success"),this.showForm(e,this.state.currentFrameNumber,!1)):(this.showNotification("所有廠內流程已完成！","success"),this.fetchAndShowProgressDashboard(this.state.currentFrameNumber,!0))}else this.fetchAndShowProgressDashboard(this.state.currentFrameNumber,!0)}else this.goHome();else this.handleError(o.message)}).catch(this.handleError.bind(this)).finally(()=>this.hideLoader())},toggleScanner(){if(this.state.qrScanner&&this.state.qrScanner.isScanning)this.state.qrScanner.stop().then(()=>console.log("QR Code scanning stopped.")).catch(t=>console.error("Error stopping scanner:",t)).finally(()=>{document.getElementById("qr-reader").style.display="none"});else{const t=document.getElementById("qr-reader");t.style.display="block",this.state.qrScanner=new Html5Qrcode("qr-reader"),this.state.qrScanner.start({facingMode:"environment"},{fps:10,qrbox:{width:250,height:250}},o=>{this.dom.frameNumberInput.value=o,this.toggleScanner(),this.startProcess()},()=>{}).catch(()=>{this.handleError("無法啟動相機，請檢查權限。"),t.style.display="none"})}},showScreen(t){this.dom.homeScreen.style.display=t==="home-screen"?"block":"none",this.dom.workflowContainer.style.display=t==="workflow-container"?"block":"none"},goHome(){this.showScreen("home-screen"),this.setActiveTab("in-factory")},showLoader(t="處理中..."){this.dom.loader.querySelector("p").textContent=t,this.dom.loader.classList.remove("hidden")},hideLoader(){this.dom.loader.classList.add("hidden")},showNotification(t,o="success"){this.dom.notification.textContent=t,this.dom.notification.className=o,this.dom.notification.classList.add("show"),setTimeout(()=>{this.dom.notification.classList.remove("show")},3e3)},handleError(t){const o=t instanceof Error?t.message:String(t);console.error("An error occurred:",o),this.showNotification(o,"error"),this.hideLoader()},resizeImage(t,o,s){return new Promise((a,n)=>{const e=new FileReader;e.onload=r=>{const i=new Image;i.onload=()=>{const c=document.createElement("canvas"),h=Math.min(1,o/i.width);c.width=i.width*h,c.height=i.height*h,c.getContext("2d").drawImage(i,0,0,c.width,c.height),a(c.toDataURL("image/jpeg",s))},i.onerror=n,i.src=r.target.result},e.onerror=n,e.readAsDataURL(t)})}};document.addEventListener("DOMContentLoaded",()=>m.init());
