(function(){const o=document.createElement("link").relList;if(o&&o.supports&&o.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const t of r)if(t.type==="childList")for(const n of t.addedNodes)n.tagName==="LINK"&&n.rel==="modulepreload"&&i(n)}).observe(document,{childList:!0,subtree:!0});function s(r){const t={};return r.integrity&&(t.integrity=r.integrity),r.referrerPolicy&&(t.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?t.credentials="include":r.crossOrigin==="anonymous"?t.credentials="omit":t.credentials="same-origin",t}function i(r){if(r.ep)return;r.ep=!0;const t=s(r);fetch(r.href,t)}})();const m={gasApi:{run(e,o={}){const s="https://script.google.com/macros/s/AKfycbwaCruHVMi3XW1uqM8BesmRO2Pgvb2wMiBmFEY594K6MNzNTar7K_LXCQaHcVvFyFzYdg/exec";return console.log(`%c[API Request] -> ${e}`,"color: #0052cc; font-weight: bold;",o),new Promise((i,r)=>{const t=`jsonp_callback_${Date.now()}_${Math.floor(Math.random()*1e5)}`,n=document.createElement("script");let a=`${s}?action=${e}&callback=${t}`;Object.keys(o).forEach(l=>{let d=o[l];typeof d=="object"&&(d=JSON.stringify(d)),a+=`&${encodeURIComponent(l)}=${encodeURIComponent(d)}`}),n.src=a;const c=setTimeout(()=>{r(new Error(`Request timed out for action: ${e}`)),h()},2e4);window[t]=l=>{l.success?console.log(`%c[API Response] <- ${e}`,"color: #00875a; font-weight: bold;",l):console.error(`%c[API Error] <- ${e}`,"color: #de350b; font-weight: bold;",l),i(l),h()};const h=()=>{clearTimeout(c),delete window[t],n.parentNode&&n.parentNode.removeChild(n)};n.onerror=()=>{r(new Error(`Script error for action: ${e}`)),h()},document.head.appendChild(n)})}},state:{currentFrameNumber:null,qrScanner:null,isEditMode:!1,formCache:{},vehicleProgressCache:{}},dom:{},config:{},maintenanceData:{},cacheDomElements(){this.dom={loader:document.getElementById("loader"),notification:document.getElementById("notification"),mainContent:document.getElementById("main-content"),homeScreen:document.getElementById("home-screen"),workflowContainer:document.getElementById("workflow-container"),userNameInput:document.getElementById("user-name-input"),frameNumberInput:document.getElementById("frame-number-input"),tabsContainer:document.getElementById("tabs-container"),inFactoryContent:document.getElementById("in-factory-content"),outFactoryContent:document.getElementById("out-factory-content"),startBtn:document.getElementById("start-btn"),scanBtn:document.getElementById("scan-btn")}},init(){this.cacheDomElements(),this.bindEvents(),this.showLoader("正在初始化應用..."),this.gasApi.run("getInitialPayload").then(e=>{if(e.success){const o=e.data;this.config=o.config,this.maintenanceData=o.maintenanceData,this.preloadForms(),this.setupEventListeners(),this.renderTabs(),this.loadPersistedData(),this.setActiveTab("in-factory")}else this.handleError(e.message)}).catch(this.handleError.bind(this)).finally(()=>this.hideLoader())},bindEvents(){this.startProcess=this.startProcess.bind(this),this.toggleScanner=this.toggleScanner.bind(this),this.handleFormSubmit=this.handleFormSubmit.bind(this),this.goHome=this.goHome.bind(this),this.showForm=this.showForm.bind(this),this.showDirectForm=this.showDirectForm.bind(this)},async preloadForms(){const e=[...this.config.IN_FACTORY_FORMS,...this.config.OUT_FACTORY_FORMS];for(const o of e)try{const s=await fetch(`forms/${o}.html?t=${new Date().getTime()}`);if(!s.ok)throw new Error(`Form ${o} not found at forms/${o}.html`);this.state.formCache[o]=await s.text()}catch(s){console.error(`Failed to preload form ${o}:`,s)}},fetchFormStructure(e){return new Promise((o,s)=>{this.state.formCache[e]?o(this.state.formCache[e]):(console.warn(`Form ${e} was not preloaded, fetching now.`),fetch(`forms/${e}.html?t=${new Date().getTime()}`).then(i=>{if(!i.ok)throw new Error(`Form ${e} not found.`);return i.text()}).then(i=>{this.state.formCache[e]=i,o(i)}).catch(i=>{this.handleError(`無法載入表單 ${e}。`),s(i)}))})},setupEventListeners(){this.dom.startBtn.addEventListener("click",this.startProcess),this.dom.scanBtn.addEventListener("click",this.toggleScanner),this.dom.frameNumberInput.addEventListener("keypress",e=>{e.key==="Enter"&&this.startProcess()}),this.dom.tabsContainer.addEventListener("click",e=>{e.target.classList.contains("tab")&&this.setActiveTab(e.target.dataset.tab)})},renderTabs(){this.dom.inFactoryContent.style.display="block",this.dom.outFactoryContent.style.display="none"},setActiveTab(e){this.dom.tabsContainer.querySelectorAll(".tab").forEach(s=>s.classList.remove("active")),this.dom.tabsContainer.querySelector(`[data-tab="${e}"]`).classList.add("active"),e==="in-factory"?(this.dom.inFactoryContent.style.display="block",this.dom.outFactoryContent.style.display="none"):(this.dom.inFactoryContent.style.display="none",this.dom.outFactoryContent.style.display="block",this.renderOutFactoryForms())},renderOutFactoryForms(){if(!this.config.OUT_FACTORY_FORMS||this.config.OUT_FACTORY_FORMS.length===0){this.dom.outFactoryContent.innerHTML="<p>目前沒有廠外流程。</p>";return}let e='<div class="out-factory-grid">';this.config.OUT_FACTORY_FORMS.forEach(o=>{const s=this.maintenanceData[o]||o;e+=`<button class="btn-secondary" data-form-id="${o}">${s}</button>`}),e+="</div>",this.dom.outFactoryContent.innerHTML=e,this.dom.outFactoryContent.querySelectorAll(".btn-secondary").forEach(o=>{o.addEventListener("click",s=>{const i=s.currentTarget.dataset.formId;this.showDirectForm(i)})})},loadPersistedData(){const e=localStorage.getItem("userName");e&&(this.dom.userNameInput.value=e)},startProcess(){const e=this.dom.frameNumberInput.value.trim().toUpperCase().replace(/[^A-Z0-9]/g,""),o=this.dom.userNameInput.value.trim();if(!o)return this.showNotification("請輸入作業人員","error");if(!e)return this.showNotification("請輸入有效車架號碼","error");localStorage.setItem("userName",o),this.dom.frameNumberInput.value=e,this.state.currentFrameNumber=e,this.fetchAndShowProgressDashboard(e)},fetchAndShowProgressDashboard(e,o=!1){if(!o&&this.state.vehicleProgressCache[e]){this.renderProgressDashboard(this.state.vehicleProgressCache[e]),this.showScreen("workflow-container");return}this.showLoader("正在查詢車輛進度..."),this.gasApi.run("getVehicleProgress",{frameNumber:e}).then(s=>{s.success?(this.state.vehicleProgressCache[e]=s.data,this.renderProgressDashboard(s.data),this.showScreen("workflow-container")):this.handleError(s.message)}).catch(this.handleError.bind(this)).finally(()=>this.hideLoader())},renderProgressDashboard(e){const o=e.progress||{},s=Object.keys(o).filter(t=>o[t]===!0).map(t=>String(t).trim().toUpperCase());let i=null;for(const t of this.config.IN_FACTORY_FORMS){const n=String(t).trim().toUpperCase();if(!s.includes(n)){i=n;break}}let r='<div class="progress-stepper">';this.config.IN_FACTORY_FORMS.forEach(t=>{const n=this.maintenanceData[t]||t,a=String(t).trim().toUpperCase(),c=s.includes(a),h=i===a;let l="step";c&&(l+=" completed"),h&&(l+=" current"),r+=`
        <div class="${l}" id="step-${t}">
          <div class="step-content">
            <h3>${n} <span class="status-indicator">${c?"✓ 已完成":h?"» 進行中":"待辦"}</span></h3>
            <p>狀態: ${c?"已完成":"未完成"}</p>
            <button class="btn-primary" data-form-id="${t}" data-is-completed="${c}">
              ${c?"查看/編輯":"開始作業"}
            </button>
          </div>
        </div>`}),r+="</div>",this.dom.workflowContainer.innerHTML=`
      <div class="content-card active">
        <div class="workflow-header">
          <h2>車輛進度儀表板</h2>
          <p>車架號碼: <strong>${this.state.currentFrameNumber}</strong> | 作業人員: <strong>${this.dom.userNameInput.value.trim()}</strong></p>
        </div>
        ${r}
        <div class="workflow-actions">
          <button class="btn-secondary" id="back-to-home">返回主畫面</button>
        </div>
      </div>`,this.dom.workflowContainer.querySelector("#back-to-home").addEventListener("click",this.goHome),this.dom.workflowContainer.querySelectorAll(".btn-primary").forEach(t=>{t.addEventListener("click",n=>{const a=n.currentTarget.dataset.formId,c=n.currentTarget.dataset.isCompleted==="true";this.showForm(a,this.state.currentFrameNumber,c)})})},goHome(){this.showScreen("home-screen"),this.setActiveTab("in-factory")},showForm(e,o,s=!1){this.state.isEditMode=s;const r={title:this.maintenanceData[e]||e,subtitle:`車架號碼: ${o}`,backButtonText:"返回進度儀表板",backButtonAction:()=>this.fetchAndShowProgressDashboard(o)};this.showFormBase(e,s,r)},showDirectForm(e){this.state.isEditMode=!1;const s={title:this.maintenanceData[e]||e,subtitle:"請填寫以下欄位",backButtonText:"返回主畫面",backButtonAction:()=>this.goHome()};this.showFormBase(e,!1,s)},populateDynamicFields(e,o,s){const i=this.dom.workflowContainer.querySelector(".form-container");let r=i.innerHTML;const t=new Date().toLocaleString("sv-SE");r=r.replace(/{{車架號碼}}/g,s||""),r=r.replace(new RegExp(`{{${o}_更新時間}}`,"g"),t),i.innerHTML=r},async showFormBase(e,o,s){try{this.showLoader("正在載入表單...");const i=await this.fetchFormStructure(e);if(!i)throw new Error(`無法載入表單 ${e} 的 HTML。`);this.dom.workflowContainer.innerHTML=`
              <div class="content-card active">
                <div class="workflow-header">
                  <h2>${s.title}</h2>
                  <p>${s.subtitle} | 作業人員: <strong>${this.dom.userNameInput.value.trim()}</strong></p>
                </div>
                <div class="form-container">${i}</div>
              </div>`,this.populateDynamicFields(null,e,this.state.currentFrameNumber);const r=this.dom.workflowContainer.querySelector("form");if(!r)throw new Error("在載入的 HTML 中找不到 <form> 元素。");r.id=e;const t=this.state.currentFrameNumber;if(t){const h=r.querySelector('input[name="車架號碼"]');h&&(h.value=t)}const n="Your Vehicle Model",a=r.querySelector('input[name="車輛型號"]');a&&(a.value=n);const c=document.createElement("div");c.className="workflow-actions",c.innerHTML=`
              <button type="submit" class="btn-primary">提交表單</button>
              <button type="button" class="btn-secondary" id="back-button">${s.backButtonText}</button>
            `,r.appendChild(c),r.addEventListener("submit",this.handleFormSubmit),r.querySelector("#back-button").addEventListener("click",s.backButtonAction),o&&await this.loadAndPopulateFormData(r,r.id,this.state.currentFrameNumber),this.showScreen("workflow-container")}catch(i){this.handleError(i)}finally{this.hideLoader()}},loadAndPopulateFormData(e,o,s){return new Promise((i,r)=>{this.gasApi.run("getFormResponseData",{formId:o,frameNumber:s}).then(t=>{if(t.success&&t.data&&Object.keys(t.data).length>0){const n=t.data;for(const a in n){const c=e.querySelector(`[name="${a}"]`);if(c)switch(c.type){case"radio":{const h=e.querySelector(`[name="${a}"][value="${n[a]}"]`);h&&(h.checked=!0);break}case"checkbox":c.checked=n[a]===!0||n[a]==="true";break;case"file":{if(typeof n[a]=="string"&&n[a].startsWith("http")){const h=document.getElementById(`${e.id}_${a}_preview`);h&&(h.src=n[a],h.style.display="block")}break}default:c.value=n[a];break}}i()}else t.success?(this.showNotification("查無先前的表單紀錄。","success"),i()):(this.showNotification(`無法載入資料: ${t.message}`,"error"),r(new Error(t.message)))}).catch(t=>{this.handleError(t),r(t)})})},async handleFormSubmit(e){e.preventDefault();const o=e.target;this.showLoader("正在提交資料..."),console.log("--- Debugging Form Elements ---"),console.log("Form object:",o);for(const t of o.elements)console.log(`Found element: Name='${t.name}', Type='${t.type}', Value='${t.value}', Checked='${t.checked}'`);console.log("-----------------------------");const s={};for(const t of o.elements)if(t.name)switch(t.type){case"radio":case"checkbox":t.checked&&(s[t.name]=t.value);break;case"file":break;default:s[t.name]=t.value;break}s.formId=o.id,s.車架號碼=this.state.currentFrameNumber,s.userName=this.dom.userNameInput.value.trim();const i=o.querySelectorAll('input[type="file"]'),r=Array.from(i).map(t=>t.files&&t.files[0]?this.resizeImage(t.files[0],1024,.8).then(n=>{s[t.name]=n}):Promise.resolve());try{await Promise.all(r),this.submitDataToServer(s)}catch(t){this.handleError("處理圖片時發生錯誤: "+t.message),this.hideLoader()}},submitDataToServer(e){this.showLoader("正在儲存資料..."),this.gasApi.run("processFormSubmit",{formData:JSON.stringify(e)}).then(async o=>{if(o.success)if(this.showNotification("資料提交成功！","success"),delete this.state.vehicleProgressCache[this.state.currentFrameNumber],this.config.IN_FACTORY_FORMS.includes(e.formId)){const s=await this.gasApi.run("getVehicleProgress",{frameNumber:this.state.currentFrameNumber});if(s.success){this.state.vehicleProgressCache[this.state.currentFrameNumber]=s.data;const i=s.data.progress||{},r=Object.keys(i).filter(n=>i[n]===!0).map(n=>String(n).trim().toUpperCase());let t=null;for(const n of this.config.IN_FACTORY_FORMS)if(!r.includes(String(n).trim().toUpperCase())){t=n;break}t?(this.showNotification(`自動載入下一個表單: ${this.maintenanceData[t]||t}`,"success"),this.showForm(t,this.state.currentFrameNumber,!1)):(this.showNotification("所有廠內流程已完成！","success"),this.fetchAndShowProgressDashboard(this.state.currentFrameNumber,!0))}else this.fetchAndShowProgressDashboard(this.state.currentFrameNumber,!0)}else this.goHome();else this.handleError(o.message)}).catch(this.handleError.bind(this)).finally(()=>this.hideLoader())},toggleScanner(){if(this.state.qrScanner&&this.state.qrScanner.isScanning)this.state.qrScanner.stop().then(()=>console.log("QR Code scanning stopped.")).catch(e=>console.error("Error stopping scanner:",e)).finally(()=>{document.getElementById("qr-reader").style.display="none"});else{const e=document.getElementById("qr-reader");e.style.display="block",this.state.qrScanner=new Html5Qrcode("qr-reader"),this.state.qrScanner.start({facingMode:"environment"},{fps:10,qrbox:{width:250,height:250}},o=>{this.dom.frameNumberInput.value=o,this.toggleScanner(),this.startProcess()},()=>{}).catch(()=>{this.handleError("無法啟動相機，請檢查權限。"),e.style.display="none"})}},showScreen(e){this.dom.homeScreen.style.display=e==="home-screen"?"block":"none",this.dom.workflowContainer.style.display=e==="workflow-container"?"block":"none"},goHome(){this.showScreen("home-screen"),this.setActiveTab("in-factory")},showLoader(e="處理中..."){this.dom.loader.querySelector("p").textContent=e,this.dom.loader.classList.remove("hidden")},hideLoader(){this.dom.loader.classList.add("hidden")},showNotification(e,o="success"){this.dom.notification.textContent=e,this.dom.notification.className=o,this.dom.notification.classList.add("show"),setTimeout(()=>{this.dom.notification.classList.remove("show")},3e3)},handleError(e){const o=e instanceof Error?e.message:String(e);console.error("An error occurred:",o),this.showNotification(o,"error"),this.hideLoader()},resizeImage(e,o,s){return new Promise((i,r)=>{const t=new FileReader;t.onload=n=>{const a=new Image;a.onload=()=>{const c=document.createElement("canvas"),h=Math.min(1,o/a.width);c.width=a.width*h,c.height=a.height*h,c.getContext("2d").drawImage(a,0,0,c.width,c.height),i(c.toDataURL("image/jpeg",s))},a.onerror=r,a.src=n.target.result},t.onerror=r,t.readAsDataURL(e)})}};document.addEventListener("DOMContentLoaded",()=>m.init());
